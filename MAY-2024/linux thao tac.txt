- xem package
	snap list |grep -v canonical
	apt-mark showmanual

-copy:
	cp -u from to : copy cái mới hơn
	cp -r from to: copy recursively
	cp -L from to : copy file gốc (thay vì copy symbolic link)
	find /path/to/source/directory -name 'r8*.dtb' -exec cp {} /path/to/destination/directory \; (copy file với điều kiện; {} là placeholder đem link ở find qua; \ là dừng exec)
	cp $(find . -name 'r8*.dtb') /path/to/destination/directory (ko nên xài khi có quá nhiều file, lệnh này ghi đè)
	rsync -R /usr/sbin/mkfs /đường_dẫn_đích : giữ nguyên cấu trúc khi copy VD: /usr/lib/opkg/alternatives/mkfs.ext2 vào thư mục /home/user -> /home/user/usr/lib/opkg/alternatives/mkfs.ext2
	(COPY mkfs và lsblk vào root mới - đứng ở thư mục rootfs cũ chứa lsblk : sudo rsync -Rl $(find . -name '*mkfs*' 2>/dev/null) ../../E3_full/rootfs/)
	rsync -rl thì chỉ copy như 'cp' chứ không vào đúng thư mục
-remove:
	rm -rf:xóa sạch folder + file

- xem os,lsb version:
	cat /etc/os-release
	cat /etc/lsb-release
	lsb_release

- dry run rm:
	ls -R folder/

- copy file tới ssh:
	scp [other options] [source username@IP]:/[directory and file name] [destination username@IP]:/[destination directory]
	scp "C:\Users\long.trinh-tien\.ssh\id_rsa.pub" long.trinh-tien@192.168.2.25:~/.ssh ; sau đó lưu dưới tên authorized_keys

- Xem version của package:
	apt-show-versions name_of_package (chỉ show được package đã cài)
	apt show <package>

- Kiểm tra file trước khi xóa
	find [path-cần-kiểm-tra] -type d -exec echo '{}' \;

- ls, ll, l, la, tree -L num_of_child : xem file và thư mục
	ls -1 : xem list theo hàng dọc
		

- Xem thời gian execute:
	Linux: time + command
	Powershell: Measure-Command {.\do_something.ps1}

- Tạo nhiều thư mục:
	mkdir -p "$directory/another_dir/another_dir2"
	Hay được sử dụng với kiểm tra các thư mục có tồn tại hay ko : if[! -d "$directory"]; then ... fi

- đã cài thêm: apt-get
	pkg-config libx11-dev libxkbcommon-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev (doxygen >200MB) (mesa-common-dev 175MB)
	(raspi) :bison, flex, libssl-dev, libncurses-dev


-cross-compiler arm64 from linux: 
	export PATH=~/tools/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin:$PATH
	make ARCH=arm CROSS_COMPILE=aarch64-linux-gnu-

-Cách xài putty serial: 
	vào /dev/ttxx kiểm tra xem device mới input vào, kiểm tra baudrate/speed (rasp 115200)

- Cách xài docker
	viết Dockerfile FROM:ubuntu + command install package (nhớ -y)
	docker build -t name_in_lowercase . (tại thư mục chứa Dockerfile)
	docker run -it name_in_lowercase bash : tạo mới container
	docker run -rm name_in_lowercase: chạy xong xóa luôn container : để demo sản phẩm
	docker start nameOfContainer : khởi chạy container đã run ở trên
	docker attach nameOfContainer : vào trong container đó

- Cách để process chạy trên background (on shell only)
	Cho process chạy (VD: sleep 60s)
	Ấn Ctrl+Z để suspend process đó (hiện tại thì đang dừng)
	Ấn 'jobs' để xem các job đang suspend và lấy job_id (do chạy trên shell nên ta lấy job_id thay vì PID)
	Ấn 'bg job_id' (để chạy background) hoặc 'fg job_id' (để chạy foreground)

- Đợi 1 process khác xong
	Dùng hàm 'wait'

- Kill 1 process bất kì
	Ấn 'ps' (xem process của user chạy) 'ps -x' (process + command liên quan tới user) 'ps -u' (nhiều thông tin hơn)
	Hoặc ấn 'top' để xem toàn bộ process đang chạy
	Lấy PID và ấn 'kill -9 PID' là kill được 
	Kill hết background : kill $(jobs -p)

- Mount 1 folder từ máy khác trong lan vào máy mình
	Install sshfs
		$ sudo apt-get install sshfs

	2.Create local mount point

		$ mkdir /home/johndoe/sshfs-path/

	3.Mount remote folder /remote/path to /home/johndoe/sshfs-path/

		$ sshfs -o allow_other remoteuser@111.222.333.444:/remote/path /home/johndoe/sshfs-path/

	And finally, to umount ...
		$ fusermount -u /home/johndoe/sshfs-path/

-Nén và giải nén zip, gz, tarball
	zip -r name.zip folder
	unzip name.zip -d /path/dir
	tar -cf folder (nén tar.gz)
	tar -cJf archive.tar.xz /path/to/directory (nén tar.xz)
	tar -xf folder.tar.gz (giải nén)
	gunzip filename.gz: Giải nén và xóa file gốc.
	zcat filename.gz > filename: Giải nén và giữ lại file .gz.


- Search trong file/tên file và trong lịch sử commit:
	git grep "word" 
	git ls-files "*name_of_file_to_search*"
	git log -p -S "commit_search"
	ack -g "name_file"
	grep -Rnw '/path/to/somewhere/' -e 'pattern' (-r or -R is recursive ; use -R to search entirely; -n is 
		line number; -w stands for match the whole word.
	grep -rn "sata" .

- Kiểm tra các file .pc khi sử dụng poky cross toolchains (đôi khi nó include 1 package mà máy ta không có -> lỗi)
	Xóa file hoặc unset PKG_CONFIG_PATH

- Kiểm tra md5sum xem file có giống nhau không
	md5sum FileName

- Kiểm tra pico có ai đang xài không
	ps aux | grep pico

- Kiểm tra tiến trình call gì 
	strace -p PID
- Truyền pass vào sudo:
	echo Pass1234 |sudo -S 'command go here'
- Spam 
	yes "word"

- Logout user
	sudo pkill -KILL -u username

- Lọc và đếm tổng số lượng unique 
	awk '{print $1}' example.txt | uniq | wc -l hoặc awk '{print $1}' example.txt | sort | uniq | wc -l

- chmod mọi thứ
	chmod -R 777 path/to/change/mode

- vim
	thêm dòng cuối : Shift+g (hoặc ctrl +d)  o
	thêm dòng đầu : gg (hoặc ctrl + u) shift+o
	exit và lưu ":wq"
	tới cuối dòng  $
	tới cuối trang :$ hoặc ctrl + end
	undo ctrl+u, redo Ctrl+R
	search : /word		next search: n
	tới 1 dòng bất kì : xxgg VD: 81gg
	copy (yank) xx dòng: xxyy VD: 10yy
	comment nhiều dòng (visual block) : ctrl+V -> tới dòng cuối muốn comment -> shift I (xóa thì ấn x) -> // hoặc # -> esc
	Tìm nhanh từ tiếp theo *, tìm nhanh từ trước đó #
	replace : :%s#rmmod sata_rcar.ko#rmmod ~/sata_rcar.ko#g hoặc :%s/rmmod sata_rcar.ko/rmmod ~sata_rcar.ko/g

- tải package mannually bằng apt/apt-get
	apt download htop
	apt-get download libxml2-dev:arm64 (để cho arm64)
	dpkg-deb -x package.deb . Để giải nén

- để cài thủ công package cho poky toolchain/rootfs bất kì
	echo $SDKTARGETSYSROOT -> xem path sysroot
	pkg-config --variable=pc_path pkg-config -> xem nơi các file *.pc được đọc từ toolchain
	Chép file .pc vào rồi kiểm tra lại path include và link library trong file đó
	Thêm lib, module vào 
	
	Với file exec (trong bin hoặc sbin khi ta gõ lệnh nó sẽ hiện như htop) thì cần tìm tên
		readelf -d /path/to/bin
		objdump -x /path/to/bin (chưa test)
		Xong find các lib và chép qua

- find 
	find . -type f/d -name '*pattern*'
	Xóa hết trừ những thư mục ... : find /path/to/directory -mindepth 1 -maxdepth 1 ! -name 'bin' ! -name 'boot' ! -name 'dev' ! -name 'etc' ! -name 'home' ! -name 'lib' ! -name 'media' ! -name 'mnt' ! -name 'proc' ! -name 'root' ! -name 'run' ! -name 'sbin' ! -name 'srv' ! -name 'sys' ! -name 'tmp' ! -name 'usr' ! -name 'var' -exec rm -rf {} \;


- dùng locate tìm
	locate pattern (chưa test kỹ)

- copy file giữ path (để xài cho việc chép vào poky)
	rsync -avR $(find . -name '*pciaccess*') destination_directory

- xem module info
	modinfo *.ko
	mobprobe ?
	depmod ?
	insmod + rmmod
	
- config linux kernel version magic
	Thông thường nếu ta không config gì thì version magic sẽ ra dạng : version.random_number. EX: 5.10.218.123456489
	Để thay đổi số version, ta vào Makefile ở thư mục ngoài cùng của kernel sẽ thấy các mục để thay đổi
		VERSION = 5
		PATCHLEVEL = 10
		SUBLEVEL = 218
		EXTRAVERSION =
	Và để thêm ngay sau version 1 dòng chữ thì thêm LOCALVERSION (thêm trực tiếp trên cmd )
		make -j16 modules LOCALVERSION=-yocto-standard
	Để xóa phần random_number thì tắt (comment)
		LOCALVERSION_AUTO=y
	https://stackoverflow.com/questions/19333918/dont-add-to-linux-kernel-version

- Xem dung lượng cả ổ cứng :
	df -h .
	Xem folder: du -sh .

- Xem config của board :
	zcat /proc/config.gz
- Xem device tree:
	cat /proc/device-tree/model

- Xem thời gian hoạt động của máy:
	linux: uptime
	Window: bật event viewer (eventvwr) chọn Windows Logs -> System -> Filter Current Log -> Chỗ <All Event IDs> đổi thành: 6005(bật),6006(tắt),6013(uptime),6009,6008

- Xóa dấu vân tay fingerprint ssh :
	ssh-keygen -f "/home/rvc/.ssh/known_hosts" -R "192.168.8.20"

- Quét ip
	nmap -sn 192.168.8.0/24
- Thoát ssh đang bị lag
	Enter -> ~ -> .

- yocto 
	xem thông tin về các phiên bản có trong recipe - trước khi build (inside bblayers.conf) : bitbake-layers show-recipes wayland-protocols. Sau khi build : bitbake -s wayland-protocols
	Chọn version mong muốn: conf/local.conf	: PREFERRED_VERSION_wayland-protocols = "1.33" (đảm bảo đã thêm layer đó vào bblayers.conf)
	IMAGE_INSTALL:remove = "kernel-module-cmemdrv"
	IMAGE_INSTALL += "util-linux usbutils e2fsprogs iperf3 linuxptp gcc make binutils trace-cmd"
	Xem toàn bộ recipe có sẵn: bitbake-layers show-recipes > ../../recipe_yocto.txt
	Cài file rpm từ trong source yocto: rpm -ivh package1.rpm package2.rpm (lấy file trên trong build/tmp/deploy/rpm)

- thêm file này vào cuối file kia:
	cat file2 >> file1  (1 dấu > là ghi đè)
	cat file2 | tee -a file1

- Bind / unbind bằng 1 command : echo Pass1234 | sudo -S tee /sys/bus/usb/drivers/usb/bind <<< "2-2"

- python
	Kill hết job nhỏ : a.send('kill $(jobs -p)')
	kill process trên os.system: echo Pass1234 | sudo -S pkill iperf3
	Kiểm tra 1 từ có xuất hiện hay không : tee vào LOG_FILE xong check_log
	Chạy 1 lệnh background và in kết quả vào file:  iperf3 -s > iperf3_result.txt &
	#Ctrl + C
    		a.send('\x03')
  	#Ctrl + z
    		a.send('\x1A')
	Đổi text hex thành int
		BIT28_CHECK = int(TMP.split()[len(TMP.split())-1],16)
	Check bit thứ 28
		if((BIT28_CHECK & (1 << 28)) == 1):
			return False
	+ Check log của board:
		    a.buff=""
			a.send('echo rd  0xe6150048 > /proc/reg')
			with open(LOG_FILE, 'w') as log_file:
				log_file.write(a.buff) #để ghi
				print(log_file.read()) #để đọc
			TMP = check_log(LOG_FILE,'mem read')
	Đọc output ko cần hàm check_log : os.popen(command).read()
			
- Truy cập ssh thông qua 2 máy : 
	ssh -J <user>@<hostB> <user>@<hostC>
	Xài trong vscode như trên, còn trong mobaxterm thì host B sẽ nhập trong jump host ở configuration
	
- ghi thông tin vào dmesg:
	echo "Hello, dmesg!" | sudo tee /dev/kmsg

- Đổi tên rootfs cho giống với config.PLATFORM
	sudo nano /etc/hostname
	sudo nano /etc/hosts
	
- Thêm vào bootargs:
	quiet loglevel=1 : giảm log
	
- Tìm file mới sinh ra có dung lượng lớn:
	find /path/to/directory -type f -mtime -7 -exec du -h {} + | sort -hr
	find . -type d -mtime -7 -exec du -sh {} \; | sort -hr
	sudo find /tftpboot/ -type d -mtime -30 -exec du -sh {} + | sort -rh | head -n 10
	
- đổi màu terminal:
	export PS1="\[\e[1;32m\]rvc@L410730-CL011\[\e[0m\]:\[\e[1;34m\]\w\[\e[0m\]\$ "
	Một số mã màu cơ bản:
	Color Name		Foreground Color Code	Background Color Code
		Black			   30			  |          40
		Red				   31			  |          41
		Green			   32			  |          42
		Yellow			   33			  |          43
		Blue			   34			  |          44
		Magenta			   35			  |          45
		Cyan			   36			  |          46
		White			   37			  |          47
		Default			   39			  |          49
		Reset			   0			  |          0
	Kiểu chữ:
		Bình thường: \e[0m
		In đậm: \e[1m
		Gạch dưới: \e[4m

- apply thay vì git apply (số dòng không khớp)
	patch -p1 < g_zero_usb2f.patch
	
- tmux thêm chuột:
	~/.tmux.conf thêm : set -g mouse on			 sau đó nhập : tmux source-file ~/.tmux.conf
	
- Để truyền mạng qua dây LAN giữa hai máy Linux, trong đó máy Linux 1 có kết nối mạng qua Wi-Fi, bạn có thể làm theo các bước sau:
	(IP forwarding còn có tác dụng trong việc thông mạng tới các interface trong cùng 1 máy)
	### Bước 1: Kết nối Cáp Ethernet

	1. **Kết nối cáp Ethernet** giữa hai máy Linux.

	### Bước 2: Cấu hình Máy Linux 1 (Máy có Wi-Fi)

	Trên máy Linux 1, thực hiện các bước sau để chia sẻ kết nối:

	1. **Xác định tên giao diện mạng Wi-Fi**:

	   ```bash
	   ip a
	   ```

	   Giả sử tên giao diện là `wlan0`.

	2. **Xác định tên giao diện Ethernet**:

	   Tên giao diện Ethernet thường là `eth0` hoặc `enpXsY`.
	   Nếu máy sử dụng wifi thì kiểm tra bằng ip a hoặc ifconfig
		   1. Xem bảng định tuyến
				Chạy lệnh sau để xem bảng định tuyến:
				ip route
		2. Xác định giao diện kết nối
				Tìm dòng bắt đầu bằng default, ví dụ:
					default via 192.168.0.1 dev wlp59s0 proto dhcp metric 600

	3. **Cấu hình địa chỉ IP cho giao diện Ethernet**:

	   Giả sử bạn muốn sử dụng địa chỉ IP `192.168.8.8` cho máy Linux 1: (sử dụng IP mà trong cùng mạng (hub) với máy cần mạng)

	   ```bash
	   sudo ip addr add 192.168.8.8/24 dev eth0
	   sudo ip link set eth0 up
	   ```

	4. **Chia sẻ kết nối mạng bằng `iptables`**:

	   ```bash
	   sudo iptables -t nat -A POSTROUTING -o wlp59s0 -j MASQUERADE
	   sudo iptables -A FORWARD -i wlp59s0 -o enx00e0006095bd -j ACCEPT
	   sudo iptables -A FORWARD -i enx00e0006095bd -o wlp59s0 -m state --state ESTABLISHED,RELATED -j ACCEPT
	   ```

	5. **Kích hoạt IP Forwarding**:

	   Mở tệp cấu hình:

	   ```bash
	   sudo nano /etc/sysctl.conf
	   ```

	   Tìm dòng `#net.ipv4.ip_forward=1` và bỏ dấu `#` để kích hoạt. Sau đó, lưu và thoát.

	   Chạy lệnh sau để áp dụng thay đổi:

	   ```bash
	   sudo sysctl -p
	   ```
	(Hoặc set manual: echo 1 > /proc/sys/net/ipv4/ip_forward)
	
	### Bước 3: Cấu hình Máy Linux 2 (Máy nhận)

	Trên máy Linux 2, thực hiện các bước sau:

	1. **Cấu hình địa chỉ IP cho giao diện Ethernet**:

	   Giả sử bạn muốn sử dụng địa chỉ IP `192.168.8.169` cho máy Linux 2:

	   ```bash
	   sudo ip addr add 192.168.8.169/24 dev eth0
	   sudo ip link set eth0 up
	   ```
		hoặc : sudo ifconfig eth0 192.168.8.169 up
		
	2. **Cấu hình Gateway**:

	   Thiết lập gateway để hướng đến máy Linux 1:

	   ```bash
	   sudo ip route add default via 192.168.8.8
	   ```
	   nếu chỉ muốn trỏ 192.168.8.x thông qua 4.12 thì : sudo route add -net 192.168.8.0 netmask 255.255.255.0 gw 192.168.4.12
	   hoặc : sudo ip route add 192.168.8.0/24 via 192.168.4.12
	### Bước 4: Kiểm tra Kết nối

	Trên máy Linux 2, kiểm tra kết nối đến Internet bằng cách ping đến một địa chỉ IP bên ngoài (ví dụ: Google):

	```bash
	ping 8.8.8.8
	```

	Nếu mọi thứ đều hoạt động, bạn sẽ nhận được phản hồi từ máy chủ.

	### Kết luận

	Với các bước trên, bạn có thể chia sẻ kết nối mạng từ máy Linux 1 (có Wi-Fi) đến máy Linux 2 qua cáp Ethernet.

	!Note:
		Xem bảng iptables (forward) : sudo iptables -L -v -n
		Xem bảng iptables (nat) : sudo iptables -t nat -L -v -n
		Xem các route: ip route

	- xóa các rules:
		sudo ip route del default via 192.168.8.8
		sudo iptables -t nat -D POSTROUTING -o wifi_device -j MASQUERADE
		sudo iptables -D FORWARD -i wifi_device -o lan_device -j ACCEPT
		sudo iptables -D FORWARD -i lan_device -o wifi_device -m state --state RELATED,ESTABLISHED -j ACCEPT
		sudo iptables -F FORWARD (xóa các rules của chain mặc định)
		sudo iptables -X CHAIN_NAME (xóa chain tạo thêm)
	
	- Lưu Cấu Hình iptables (optional)
	Để lưu cấu hình iptables và đảm bảo nó được khôi phục sau khi khởi động lại, bạn có thể cài đặt iptables-persistent:

		sudo apt install iptables-persistent
	
	
	- Kiểm tra route (tcp -T thông qua wifi)
	traceroute -T 192.168.8.8
	
- Makefile build module theo source linux:
	KERNEL :=/prj/soc-sw/local/work/long.trinh-tien/kernel/usb2f_test/linux-bsp/
	obj-m += i2cd.o
	all:
		make -C $(KERNEL) -I$(KERNEL)/include M=`pwd` modules
	clean:
		make -C $(KERNEL) M=$(PWD) clean
		
- không ghi vào history :
	unset HISTFILE
	history -c

- Đánh số trang word không tự động bằng VBA:
	Ấn alt+F11 -> chọn insert -> modules
		Sub SetPageNumbersManual()
			Dim sec As Section
			Dim pgNum As PageNumbers
			Dim startNumber As Long
			
			startNumber = 1
			
			For Each sec In ActiveDocument.Sections
				Set pgNum = sec.Footers(wdHeaderFooterPrimary).PageNumbers
				
				pgNum.RestartNumberingAtSection = False
				pgNum.NumberStyle = wdPageNumberStyleArabic
				
				'To automatically set page num, use this : pgNum.Add wdAlignParagraphRight, True
				
				pgNum.RestartNumberingAtSection = True
				pgNum.StartingNumber = startNumber
				
				startNumber = startNumber + 1
			Next sec
		End Sub
		
	Đảm bảo mỗi page là 1 section (thêm section break bằng cách Layout -> Breaks -> Section breaks -> Next Page)
	
- Workaround đánh table of content nhiều file
	Cho table of content nằm cuối cùng
	Chọn Insert -> Quick Parts -> Field -> IncludeText -> nhập tên file cần thêm TOC -> OK
	Xuống trang cuối Insert table of content như thường
	
- Để máy Linux cấp IP cho switch và các máy con, bạn có thể sử dụng DHCP (Dynamic Host Configuration Protocol). Dưới đây là các bước thiết lập DHCP server trên máy Linux:
	(kết hợp với IP forwarding để cho máy linux thành 1 router truyền mạng qua lan)
	Bước 1: Cài Đặt DHCP Server
	Trên hệ thống Ubuntu hoặc Debian, bạn có thể cài đặt isc-dhcp-server bằng lệnh:

		sudo apt update
		sudo apt install isc-dhcp-server
	Trên Fedora hoặc CentOS:

		sudo dnf install dhcp
	Bước 2: Cấu Hình DHCP Server
	Mở file cấu hình DHCP:

		sudo nano /etc/dhcp/dhcpd.conf
	Thêm cấu hình sau vào file:

		# Cấu hình subnet
		subnet 192.168.8.0 netmask 255.255.255.0 {
			range 192.168.8.100 192.168.8.200;  # Dải IP cấp phát
			option routers 192.168.8.8;        # Địa chỉ IP của router (gateway)
			option domain-name-servers 8.8.8.8; # DNS server
			option domain-name "example.com";  # Tên miền 
		}
	Thay đổi dải IP và các tham số cho phù hợp với mạng của bạn.

	Bước 3: Chỉnh Sửa File Cấu Hình Network
	Mở file cấu hình mạng để chỉ định interface cho DHCP server:

		sudo nano /etc/default/isc-dhcp-server
	Tìm dòng INTERFACES và thay đổi nó thành interface bạn muốn (ví dụ: eth0):

		INTERFACES="eth0"
	Bước 4: Khởi Động DHCP Server
	Khởi động và kiểm tra trạng thái của DHCP server:

		sudo systemctl restart isc-dhcp-server
		sudo systemctl status isc-dhcp-server
	Bước 5: Kết Nối Switch và Các Máy Con
		Kết nối switch vào interface của máy Linux.
		Kết nối các máy con vào switch.
		


- Bật access point (wifi hotspot):
	Bật Access Point wifi hotspot
		nmcli dev wifi hotspot ifname wlp59s0 ssid RVC password Pass1234
	Xóa:
		nmcli connection delete Hotspot

	
	Reset:
		sudo nmcli radio wifi on
		sudo ip link set wlp59s0 down
		sudo ip link set wlp59s0 up
		nmcli device
		Check in /etc/NetworkManager/NetworkManager.conf
		[ifupdown]
		managed=false	->		managed=true
		sudo systemctl restart NetworkManager
		nmcli connection show
	Truy cập wifi:
		sudo nmcli device wifi connect R-GUEST
		
- Lấy MAC address qua IP:
	ifconfig : lấy interface (ví dụ là wlp59s0)
	sudo arping -I wlp59s0 -c1 192.168.2.130