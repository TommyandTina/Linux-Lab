# lab: lab1.o lab1_func.o
# 	gcc -o lab lab1.o lab1_func.o
# lab1.o: lab1.c lab1.h
# 	gcc -c lab1.c -o lab1.o
# lab1_func.o: lab1_func.c lab1.h
# 	gcc -c lab1_func.c -o lab1_func.o

# Define the compiler
CC=gcc

# Define any compile-time flags
CFLAGS=-Wall -g

# Define the target executable
TARGET=lab1

# List all the object files that need to be compiled
OBJS=lab1.o lab1_func.o

# Default target
all: $(TARGET)

# Link the program
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) -o $(TARGET) $(OBJS)

# Compile the source files into object files
lab1.o: lab1.c lab1.h
	$(CC) $(CFLAGS) -c lab1.c

lab1_func.o: lab1_func.c lab1.h
	$(CC) $(CFLAGS) -c lab1_func.c

# Clean target to remove compiled files
clean:
	rm -f $(TARGET) $(OBJS)
****************************************************************

CC = gcc
CFLAGS = -Wall -g
DEPS = lab2.h
OBJ = lab2.o lab2_func.o

.PHONY: all clean

all: lab2

lab2: $(OBJ)
	$(CC) $(CFLAGS) -o $@ $^

%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) -c -o $@ $<

clean:
	rm -f $(OBJ) lab2
